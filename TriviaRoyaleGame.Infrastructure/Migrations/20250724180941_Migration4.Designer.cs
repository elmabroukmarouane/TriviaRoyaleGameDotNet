// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TriviaRoyaleGame.Infrastructure.DatabaseContext.DbContextTriviaRoyaleGame;

#nullable disable

namespace TriviaRoyaleGame.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextTriviaRoyaleGame))]
    [Migration("20250724180941_Migration4")]
    partial class Migration4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.ClientAppLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClientAppLogs");
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            FirstName = "Adrien",
                            LastName = "RODRIGUES",
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrat"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            FirstName = "Ahmed",
                            LastName = "NACIRI",
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            FirstName = "Ilias",
                            LastName = "KADI",
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            FirstName = "Marouane",
                            LastName = "EL MABROUK",
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        });
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Choices")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectChoiceIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Choices = "[\"London\",\"Paris\",\"Berlin\",\"Rome\"]",
                            CorrectChoiceIndex = 1,
                            Text = "Capital of France ?"
                        },
                        new
                        {
                            Id = 2,
                            Choices = "[\"3\",\"4\",\"5\",\"6\"]",
                            CorrectChoiceIndex = 1,
                            Text = "2 + 2 = ?"
                        },
                        new
                        {
                            Id = 3,
                            Choices = "[\"Python\",\"C#\",\"Java\",\"PHP\"]",
                            CorrectChoiceIndex = 1,
                            Text = "Blazor is a ___ framework?"
                        });
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.ScoreBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ScoreBoards");
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnLine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MemberId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            Email = "adrien@mail.com",
                            IsOnLine = false,
                            MemberId = 1,
                            Password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            Role = 1,
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            Email = "ahmed@mail.com",
                            IsOnLine = false,
                            MemberId = 2,
                            Password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            Role = 1,
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            Email = "iliad@mail.com",
                            IsOnLine = false,
                            MemberId = 3,
                            Password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            Role = 1,
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Administrator",
                            Email = "marouane@mail.com",
                            IsOnLine = false,
                            MemberId = 4,
                            Password = "ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413",
                            Role = 3,
                            UpdateDate = new DateTime(2025, 6, 25, 14, 8, 11, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "Administrator"
                        });
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.ScoreBoard", b =>
                {
                    b.HasOne("TriviaRoyaleGame.Infrastructure.Models.Classes.User", "User")
                        .WithMany("ScoreBoards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.User", b =>
                {
                    b.HasOne("TriviaRoyaleGame.Infrastructure.Models.Classes.Member", "Member")
                        .WithMany("Users")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.Member", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TriviaRoyaleGame.Infrastructure.Models.Classes.User", b =>
                {
                    b.Navigation("ScoreBoards");
                });
#pragma warning restore 612, 618
        }
    }
}
